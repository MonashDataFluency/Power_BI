[
["index.html", "Introduction to Power BI Introduction", " Introduction to Power BI Introduction These are course notes for the “Introduction to Power BI” course given by the Monash Bioinformatics Platform for the Monash Data Fluency initiative. Our teaching style is based on the style of The Carpentries. PDF version for printing ZIP of data files used in this workshop During this workshop we will be using Power BI Desktop installed on your computer. There are several ways to download Power BI Desktop, depending on which system you use. Windows User Power BI website You can download Power BI Desktop from the website and install it as an application on your computer. Monash machine, My software, contact eSolutions to gain admin access(link to eSolution) After the setup process, you will be able to see the following Start Screen. Windows Store Or you can visit Windows Store to get the Power BI Desktop app and install it. Note that the system requirements is Windows 10 version 14393.0 or higher. Power BI service You can also download it from the Power BI service by clicking the download button in the upper right and selecting Power BI Desktop. To use Power BI service, you may need a Microsoft account. Mac User Power BI Desktop is not available on Macs. There are two main options. Dual BootCamp The first is to run a Windows session on your Mac via BootCamp or something similar. This is probably a longer term solution until Microsoft release a Mac version. MoVE: TODO After installing Power BI Desktop, you can sign up for Power BI using your Monash account here By signing in the Power BI Desktop, you will be able to save your work and later publish it to the Power BI service. Linux Users TODO Data Please download the data file here for the course. Source code This book was created in R using the rmarkdown and bookdown packages! GitHub page Authors and copyright This course is developed for the Monash Data Fluency Team. This work is licensed under a CC BY-4: Creative Commons Attribution 4.0 International License. The attribution is “Monash Bioinformatics Platform” if copying or modifying these notes. Data files are derived from Gapminder, which has a CC BY-4 license. The attribution is “Free data from www.gapminder.org”. The data is given here in a form designed to teach various points about the R language. Refer to the Gapminder site for the original form of the data if using it for other uses. "],
["introduction-to-powerbi.html", "1 Introduction to PowerBI 1.1 Overview of Power BI 1.2 The parts of Power BI 1.3 Use of Power BI and roles 1.4 Power BI Flow 1.5 Use Power BI: 1.6 Building blocks of Power BI: 1.7 Power BI Services:", " 1 Introduction to PowerBI 1.1 Overview of Power BI Microsoft Power BI is a collection of apps, software services and connectors that come together to turn the unrelated data into visually impressive and interactive insights. Power BI can work with the simplest of data sources like Microsoft Excel and the more complicated ones like a collection of cloud-based or on-premises hybrid Data warehouses. Power BI has the capabilities to easily connect to your data sources, visualise and share and publish your findings with anyone and everyone. Power BI can be simple and fast enough to connect to an Excel workbook or a local database or it can be robust and enterprise-grade, ready for extensive modeling and real time analytics and also for custom development. Hence, it can be a personal report and vis tool but can also act as the analytics and decision engine behind group projects, divisions, or entire corporations. 1.2 The parts of Power BI Power BI constitutes of a Microsoft Windows desktop application called Power BI Desktop, an online SaaS (Software as a Service) called Power BI Service and a mobile Power BI apps that can be accessed from Windows phones and tablets, and are also available on Apple iOS and Google Android devices. These three elements— Desktop, the service, and Mobile apps - are the backbone of the Power BI system and lets users create, share and consume the actionable insights in the most effective way. 1.3 Use of Power BI and roles The use of Power BI could depend a lot on the role that you are in. For example: if you are the stakeholder of a project, then you might want to use Power BI Service or the Mobile app to have a glance at how the business is performing. But on the other hand, if you are a developer, you would be using Power BI Desktop extensively and then publish Power BI desktop reports to the Power BI Service. In the upcoming modules we would be discussing about these three components - Desktop, Service and Mobile apps - in more detail. 1.4 Power BI Flow In the most general way, the flow starts at the Power BI Desktop, where a report is created. This created report can be published to the Power BI Service and finally shared so that the users can use it from the Mobile apps. Its not always the case that this flow happens, but more often or not it is. We will stick to this flow for this entire tutorial to help learn the different aspects of Power BI. 1.5 Use Power BI: The common flow of activity in Power BI looks like this: 1. Bring data into Power BI Desktop, and create a report. 2. Publish to the Power BI service, where you can create new visualizations or build dashboards. 3. Share dashboards with others, especially people who are on the go. 4. View and interact with shared dashboards and reports in Power BI Mobile apps. As mentioned earlier, depending on the user role, the user might spend its most of the time in one of the three components than the other. 1.6 Building blocks of Power BI: The basic building blocks in Power BI are: * Visualizations Datasets Reports Dashboards Tiles 1.6.1 Visualizations A visualization is a representation of data in a visual format. It could be a line chart, a bar graph, a color coded map or anything interesting to present the data. –Picture of a final visualisation– Visualizations can be simple as a number representing something significant or it could be quite complex like multiple stacked chart showing the proportion users participating in a survey. The prime idea of visualisation is to show the data in a way that it tells the story that’s lying underneath it. Like its said, a picture says a thousand words. 1.6.2 Datasets: A dataset is a collection of data that Power BI uses to create its visualizations. You can have a simple dataset that’s based on a single table from a Microsoft Excel workbook, similar to what’s shown in the following image. –Picture of Dataset– Dataset can also be a combination of many different sources, which can be filtered using Power BI and combine into one to use. For eg: One of the data could be the countries and its central location in the form of Latitude and Longitude and other data could be the demographics of the countries like, population, GDP etc. Power BI can combine these two data and make one dataset out of it to be used for visualizations. An important feature of Power BI is the ability of it to connect to various data sources using its connectors. Whether the data you want is in Excel or a Microsoft SQL Server database, in Azure or Oracle, or in a service like Facebook, Salesforce, or MailChimp, Power BI has built-in data connectors that let you easily connect to that data, filter it if necessary, and bring it into your dataset. After you have a dataset, you can begin creating visualizations that show different portions of it in different ways, and gain insights based on what you see. That’s where reports come in. 1.6.3 Reports: In Power BI, a report is a collection of visualizations that appear together on one or more pages. A report in Power BI is a collection of items that are related to each other. The following image shows a report that you would be creating by the end of the session. You can also create reports in the Power BI service. – Picture of report– Reports let us create many visualizations and possibly on multiple pages based on the way the developer wants to tell the story. 1.6.4 Dashboards: A Power BI dashboard is a collection of visuals from a single page that you can share with others. Often, it’s a selected group of visuals that provide quick insight into the data or story you’re trying to present. A dashboard must fit on a single page, often called a canvas (the canvas is the blank backdrop in Power BI Desktop or the service, where you put visualizations). Think of it like the canvas that an artist or painter uses—a workspace where you create, combine, and rework interesting and compelling visuals. You can share dashboards with other users or groups, who can then interact with your dashboards when they’re in the Power BI service or on their mobile device. 1.6.5 Tiles: TODO 1.7 Power BI Services: 1.7.1 Overview of Power BI Desktop Power BI Desktop is a free application for PCs that lets you gather, transform, and visualize your data. In this module, you’ll learn how to find and collect data from different sources and how to clean or transform it. You’ll also learn tricks to make data-gathering easier. Power BI Desktop and the Power BI Service work together. You can create your reports and dashboards in Power BI Desktop, and then publish them to the Power BI Service for others to consume. –Picture of desktop view– Ribbon - Displays common tasks that are associated with reports and visualizations. Report view, or canvas - Where visualizations are created and arranged. You can switch between Report, Data, and Model views by selecting the icons in the left column. Pages tab - Located along the bottom of the page, this area is where you would select or add a report page. Visualizations pane - Where you can change visualizations, customize colors or axes, apply filters, drag fields, and more. Fields pane - Where query elements and filters can be dragged onto the Report view or dragged to the Filters area of the Visualizations pane. "],
["import-dataset-and-modelling-preprocessing.html", "2 Import dataset and modelling (preprocessing) 2.1 Importing data into Power BI Desktop 2.2 Dealing with errors 2.3 ‘Applied steps’ in modelling data", " 2 Import dataset and modelling (preprocessing) Power BI can connect to a whole range of data sources, right from Excel sheets, Local databases to several Cloud services. Currently, over 60 different cloud services have specific connectors to help you connect with generic sources through XML, CSV, text, and ODBC. Let us start connecting to one of the data sources. For today we will be working on gap_minder_map.csv file. 2.1 Importing data into Power BI Desktop Power BI Desktop has a “Get Data” button from the ribbon on the “Home” tab. In Power BI, there are all sorts of different data sources available. Select a source to establish a connection. Depending on your selection, you will be asked to find the source on your computer or network, or be prompted to sign in to a service to authenticate your request. As our first step to import the dataset/file into Power BI, we click on the Get Data icon on the ribbon of Home tab. –picture– Once we select this, we go ahead and select the “CSV option” under the “file” subheading. –picture– Then browse the file and select the necessary CSV file. Press on “Connect” to have a quick preview of the file. Once we click on “load”, Power BI will successfully import the file. Any errors will then pop up ready to be analysed and fixed. –picture– –picture– Clicking on “View errors” will enable us to check the detected errors right away. Alternatively, you close the pop up and click “Edit queries” to check for any errors. This will query and list the errors in the data. 2.2 Dealing with errors 2.2.1 Check for “controlled” errors Once queried, we can see the controlled errors in the data. These errors can be analysed by clicking on them. Every error has a brief description to it saying what might’ve gone wrong. 2.2.2 Change datatype of column One of the most common errors is the detection of the datatype of a particular column. While loading the data, Power BI guesses the column type based on the data it sees. If needed the datatypes of the columns can be changed to something relevant. Double click on the “datatype” icon on top of the column, select the “datatype” and click on “Replace current step”. Any changes to the data needs to be done under the “Data file” listed under “Other Queries”. Once necessary changes are made, it is important to refresh and check if the change was applied. We can do this by clicking on the “Refresh Preview” button on the ribbon. Once all the required changes are done, we can close and apply going back to the main Power BI Desktop interface. Make sure you see all the column names in the data on the bottom right corner. 2.2.3 Replacing null values Data can have missing values for a number of reasons. This missing data is represented as null in the data. A lot of times it is important to deal with such values and fix or remove them. In the “Data” section on the left sidebar, data can be viewed. By applying a filter to a particular column, the null values can be analysed. To replace any null values, we can go back to the “Query Editor” and use the “Replace values” option. Replacing missing values is not always a direct operation. Most of the times, the missing values must be carefully analyzed and values need to be computed based on several factors. This computational procedure can be programmed with DAX. Let us cancel this particular step in the “Applied steps” by clicking on the red crossmark right next to “Replaced Value”’. 2.2.4 Challenge 1: Replace missing values 2.3 ‘Applied steps’ in modelling data 2.3.1 Renaming columns Columns from raw data can be difficult to read or meaningless. Renaming the columns in your query to a meaningful name will make it easier for you and your audience to understand your data. This will often save you trouble in the future when it comes to working and presenting the data. There are two ways to rename the columns in Power BI. Right-clicking on the header of the column gives you a menu of functions that you can do to the column. Select “Rename” to rename the column. You can also click on the column and then click on the “Transform” tab, from here you are presented a variety of transformation functions for the column. From here you can click on “Rename”. Example: - Right-click on the “name” column header, click on “Rename” and rename the column to “Country”. Click on the header for “life_exp”’. Click on the “Transform” tab and click rename. Rename the column to “Life expectancy”. 2.3.2 Add and remove column 2.3.2.1 Removing columns Often when dealing with raw data you will find columns that are meaningless or unsuitable for your analysis. You can remove these columns in Query to eliminate clutter and streamline the data set making it easier to work with. There are two ways to remove columns in Power BI. Like in renaming a column, you can right-click the header, which will present a menu with the option to “Remove”’. You can also click on the column, click on the “Home” tab and then click “Remove Columns”. Example: You may not need the g77 and oecd information. - Right-click on the g77 column header, click on “Remove” Left-click on oecd column header, click on “Home” tab, click “Remove Column” 2.3.2.2 Adding columns Just as you would remove unsuitable data from your queries, you may need to add new columns to your data. There are a variety of options in Power BI to add different columns. Click on the “Add Column” tab to see the ways you can add a column. Example: - Add or subtract a year to the year column to fix any widespread issues. Click on gdp_percap, click on the “Add Column” tab, click duplicate to create a separate column to run calculations on. 2.3.3 Challenge 2: perform simple mathematical operation and add this as a new column Let’s say you want to calculate total Gross Domestic Products (GDP) per country. Total GDP = Population x GDP per capita. Working with the new gdp_percap column you created in the previous example, create a new column with Total GDP per country. "],
["plotting-and-visualisations.html", "3 Plotting and Visualisations", " 3 Plotting and Visualisations We already saw some of R’s built in plotting facilities with the function plot. A more recent and much more powerful plotting library is ggplot2. ggplot2 is another mini-language within R, a language for creating plots. It implements ideas from a book called “The Grammar of Graphics”. The syntax can be a little strange, but there are plenty of examples in the online documentation. 3.0.1 Challenge: facet your ggplot Let’s return again to your scatter-plot of the 2010 data. Adjust your plot to now show data from all years, with each year shown in a separate facet, using facet_wrap(~ year). Advanced: Highlight Australia in your plot. "],
["saving-and-exporting.html", "4 Saving and Exporting", " 4 Saving and Exporting We already saw some of R’s built in plotting facilities with the function plot. A more recent and much more powerful plotting library is ggplot2. ggplot2 is another mini-language within R, a language for creating plots. It implements ideas from a book called “The Grammar of Graphics”. The syntax can be a little strange, but there are plenty of examples in the online documentation. 4.0.1 Challenge: facet your ggplot Let’s return again to your scatter-plot of the 2010 data. Adjust your plot to now show data from all years, with each year shown in a separate facet, using facet_wrap(~ year). Advanced: Highlight Australia in your plot. "],
["next-steps.html", "5 Next steps 5.1 Deepen your understanding 5.2 Expand your vocabulary 5.3 Join the community", " 5 Next steps 5.1 Deepen your understanding Our number one recommendation is to read the book “R for Data Science” by Garrett Grolemund and Hadley Wickham. Also, statistical tasks such as model fitting, hypothesis testing, confidence interval calculation, and prediction are a large part of R, and one we haven’t demonstrated fully today. Linear models, and the linear model formula syntax ~, are core to much of what R has to offer statistically. Many statistical techniques take linear models as their starting point, including limma for differential gene expression, glm for logistic regression (etc), survival analysis with coxph, and mixed models to characterize variation within populations. “Statistical Models in S” by J.M. Chambers and T.J. Hastie is the primary reference for this, although there are some small differences between R and its predecessor S. “An Introduction to Statistical Learning” by G. James, D. Witten, T. Hastie and R. Tibshirani can be seen as further development of the ideas in “Statistical Models in S”, and is available online. It has more of a machine learning than a statistics flavour to it (the distinction is fuzzy!). “Modern Applied Statistics with S” by W.N. Venable and B.D. Ripley is a well respected reference covering R and S. “Linear Models with R” and “Extending the Linear Model with R” by J. Faraway cover linear models, with many practical examples. 5.2 Expand your vocabulary Have a look at these cheat sheets to see what is possible with R. RStudio’s collection of cheat sheets cover newer packages in R. An old-school cheat sheet for dinosaurs and people wishing to go deeper. A Bioconductor cheat sheet for biological data. The R Manuals are the place to look if you need a precise definition of how R behaves. 5.3 Join the community Join the Data Fluency community at Monash. Mailing list for workshop and event announcements. Slack for discussion. Monthly seminars on Data Science topics. Drop-in sessions on Friday afternoon. Meetups in Melbourne: MelbURN R-Ladies The Carpentries run intensive two day workshops on scientific computing and data science topics worldwide. The style of this present workshop is very much based on theirs. For bioinformatics, COMBINE is an Australian student and early career researcher organization, and runs Carpentries workshops and similar. "]
]
